// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.Context;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250629220232_sedBebidas")]
    partial class sedBebidas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BurgerApp.Models.Bebida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImagenMimeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Bebida");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Coca Cola",
                            Precio = 800m
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Sprite",
                            Precio = 800m
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Agua Mineral",
                            Precio = 600m
                        });
                });

            modelBuilder.Entity("app.Models.EmailCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EmailCodes");
                });

            modelBuilder.Entity("app.Models.Hamburguesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImagenMimeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Hamburguesa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Clásica",
                            Precio = 2500m
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Bacon Lover",
                            Precio = 2800m
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Veggie",
                            Precio = 2400m
                        });
                });

            modelBuilder.Entity("app.Models.HamburguesaIngrediente", b =>
                {
                    b.Property<int>("HamburguesaId")
                        .HasColumnType("int");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.HasKey("HamburguesaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("HamburguesaIngrediente");

                    b.HasData(
                        new
                        {
                            HamburguesaId = 1,
                            IngredienteId = 1
                        },
                        new
                        {
                            HamburguesaId = 1,
                            IngredienteId = 2
                        },
                        new
                        {
                            HamburguesaId = 1,
                            IngredienteId = 4
                        },
                        new
                        {
                            HamburguesaId = 2,
                            IngredienteId = 1
                        },
                        new
                        {
                            HamburguesaId = 2,
                            IngredienteId = 3
                        },
                        new
                        {
                            HamburguesaId = 2,
                            IngredienteId = 5
                        },
                        new
                        {
                            HamburguesaId = 2,
                            IngredienteId = 6
                        },
                        new
                        {
                            HamburguesaId = 3,
                            IngredienteId = 2
                        },
                        new
                        {
                            HamburguesaId = 3,
                            IngredienteId = 3
                        },
                        new
                        {
                            HamburguesaId = 3,
                            IngredienteId = 4
                        });
                });

            modelBuilder.Entity("app.Models.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Carne"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Lechuga"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Queso"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Tomate"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Bacon"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Huevo"
                        });
                });

            modelBuilder.Entity("app.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contrasena = "123456",
                            Email = "fgleguiza2001@gmail.com",
                            FechaNacimiento = new DateTime(2001, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NombreCompleto = "Facuno Gerardo Leguiza",
                            Telefono = "113834103"
                        });
                });

            modelBuilder.Entity("app.Models.EmailCode", b =>
                {
                    b.HasOne("app.Models.Usuario", "Usuario")
                        .WithMany("EmailCodes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("app.Models.HamburguesaIngrediente", b =>
                {
                    b.HasOne("app.Models.Hamburguesa", "Hamburguesa")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("HamburguesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.Ingrediente", "Ingrediente")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamburguesa");

                    b.Navigation("Ingrediente");
                });

            modelBuilder.Entity("app.Models.Hamburguesa", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });

            modelBuilder.Entity("app.Models.Ingrediente", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });

            modelBuilder.Entity("app.Models.Usuario", b =>
                {
                    b.Navigation("EmailCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
